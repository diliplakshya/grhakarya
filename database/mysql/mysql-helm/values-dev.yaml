# Default values for mysql-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namespace: grahakarya-mysql-namespace

global:
  env: dev
replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

PersistentVolume:
  Volume:
    name: mysql-initdb-pv-volume
    labels:
      type: local
      app: mysql
    storage: 1Mi
    VolumeMode: FileSystem
    accessModes: ReadOnlyMany
    hostPath:
      path: /home/isha/Documents/source_code/grhakarya/database/mysql/data/sql/dev/dbinit.sql
  VolumeClaim:
    name: mysql-data-disk
    storage: 1Mi
    accessModes: ReadWriteOnce

configmap:
  name: grahakarya-auth-mysql-data-store-env

ports:
  main:
    name: mysql-main-port
    port: 3306
    targetPort: 3306
    containerPort: 3306
  admin:
    name: mysql-admin-port
    port: 8080
    targetPort: 80
    containerPort: 80
    NodePort: 32000
    
service:
  name: grahakarya-auth-mysql-dev
  type: NodePort

deployment:
  containers:
    main:
        name: grahakarya-auth-mysql-main
        image: mysql:8.0.29
        imagePullPolicy: IfNotPresent
    admin:
        name: grahakarya-auth-mysql-admin
        image: phpmyadmin:latest
        imagePullPolicy: IfNotPresent
    volumes:
      data:
        name: mysql-data
        mountPath: /var/lib/mysql
        subPath: mysql
      init:
        name: mysql-initdb
        mountPath: /docker-entrypoint-initdb.db
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
